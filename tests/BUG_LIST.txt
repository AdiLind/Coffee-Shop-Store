1. [MAJOR] BUTTON_FUNCTIONALITY - Button 0 on store has no onclick handler (store)
2. [MINOR] ACCESSIBILITY - Button 1 on store missing accessible label (store)
3. [MAJOR] BUTTON_FUNCTIONALITY - Button 0 on cart has no onclick handler (cart)
4. [MAJOR] BUTTON_FUNCTIONALITY - Button 1 on cart has no onclick handler (cart)
5. [MINOR] ACCESSIBILITY - Button 1 on cart missing accessible label (cart)
6. [MAJOR] BUTTON_FUNCTIONALITY - Button 2 on cart has no onclick handler (cart)
7. [MINOR] BUTTON_STATE - Disabled button 2 on cart may not have proper state management (cart)
8. [MINOR] ACCESSIBILITY - Button 2 on cart missing accessible label (cart)
9. [MINOR] ACCESSIBILITY - Button 0 on checkout missing accessible label (checkout)
10. [MAJOR] FORM_FUNCTIONALITY - Form 0 on checkout has no action or onsubmit handler (checkout)
11. [MAJOR] VALIDATION - Form 0 on checkout has required fields but no validation (checkout)
12. [MAJOR] BUTTON_FUNCTIONALITY - Button 0 on login has no onclick handler (login)
13. [MINOR] ACCESSIBILITY - Button 1 on login missing accessible label (login)
14. [MAJOR] FORM_FUNCTIONALITY - Form 0 on login has no action or onsubmit handler (login)
15. [MAJOR] VALIDATION - Form 0 on login has required fields but no validation (login)
16. [MAJOR] BUTTON_FUNCTIONALITY - Button 0 on register has no onclick handler (register)
17. [MINOR] ACCESSIBILITY - Button 1 on register missing accessible label (register)
18. [MAJOR] FORM_FUNCTIONALITY - Form 0 on register has no action or onsubmit handler (register)
19. [MAJOR] VALIDATION - Form 0 on register has required fields but no validation (register)
20. [MAJOR] BUTTON_FUNCTIONALITY - Button 0 on my-orders has no onclick handler (my-orders)
21. [MAJOR] BUTTON_FUNCTIONALITY - Button 1 on my-orders has no onclick handler (my-orders)
22. [MINOR] ACCESSIBILITY - Button 1 on my-orders missing accessible label (my-orders)
23. [MAJOR] BUTTON_FUNCTIONALITY - Button 2 on my-orders has no onclick handler (my-orders)
24. [MINOR] ACCESSIBILITY - Button 2 on my-orders missing accessible label (my-orders)
25. [MAJOR] BUTTON_FUNCTIONALITY - Button 0 on reviews has no onclick handler (reviews)
26. [MINOR] ACCESSIBILITY - Button 1 on reviews missing accessible label (reviews)
27. [MAJOR] FORM_FUNCTIONALITY - Form 0 on reviews has no action or onsubmit handler (reviews)
28. [MAJOR] VALIDATION - Form 0 on reviews has required fields but no validation (reviews)
29. [MAJOR] BUTTON_FUNCTIONALITY - Button 0 on wishlist has no onclick handler (wishlist)
30. [MAJOR] BUTTON_FUNCTIONALITY - Button 1 on wishlist has no onclick handler (wishlist)
31. [MINOR] ACCESSIBILITY - Button 1 on wishlist missing accessible label (wishlist)
32. [MAJOR] BUTTON_FUNCTIONALITY - Button 2 on wishlist has no onclick handler (wishlist)
33. [MINOR] ACCESSIBILITY - Button 2 on wishlist missing accessible label (wishlist)
34. [MAJOR] BUTTON_FUNCTIONALITY - Button 3 on wishlist has no onclick handler (wishlist)
35. [MINOR] ACCESSIBILITY - Button 3 on wishlist missing accessible label (wishlist)
36. [MAJOR] BUTTON_FUNCTIONALITY - Button 4 on wishlist has no onclick handler (wishlist)
37. [MINOR] ACCESSIBILITY - Button 4 on wishlist missing accessible label (wishlist)
38. [MAJOR] BUTTON_FUNCTIONALITY - Button 5 on wishlist has no onclick handler (wishlist)
39. [MINOR] ACCESSIBILITY - Button 5 on wishlist missing accessible label (wishlist)
40. [MAJOR] BUTTON_FUNCTIONALITY - Button 0 on admin has no onclick handler (admin)
41. [MAJOR] BUTTON_FUNCTIONALITY - Button 1 on admin has no onclick handler (admin)
42. [MINOR] ACCESSIBILITY - Button 1 on admin missing accessible label (admin)
43. [MAJOR] BUTTON_FUNCTIONALITY - Button 2 on admin has no onclick handler (admin)
44. [MINOR] ACCESSIBILITY - Button 2 on admin missing accessible label (admin)
45. [MAJOR] BUTTON_FUNCTIONALITY - Button 3 on admin has no onclick handler (admin)
46. [MINOR] ACCESSIBILITY - Button 3 on admin missing accessible label (admin)
47. [MAJOR] BUTTON_FUNCTIONALITY - Button 4 on admin has no onclick handler (admin)
48. [MINOR] ACCESSIBILITY - Button 4 on admin missing accessible label (admin)
49. [MINOR] ACCESSIBILITY - Button 5 on admin missing accessible label (admin)
50. [MINOR] ACCESSIBILITY - Button 6 on admin missing accessible label (admin)
51. [MINOR] ACCESSIBILITY - Button 7 on admin missing accessible label (admin)
52. [MINOR] ACCESSIBILITY - Button 8 on admin missing accessible label (admin)
53. [MINOR] ACCESSIBILITY - Button 9 on admin missing accessible label (admin)
54. [MINOR] ACCESSIBILITY - Button 10 on admin missing accessible label (admin)
55. [MINOR] ACCESSIBILITY - Button 11 on admin missing accessible label (admin)
56. [MAJOR] FORM_FUNCTIONALITY - Form 0 on admin has no action or onsubmit handler (admin)
57. [MAJOR] VALIDATION - Form 0 on admin has required fields but no validation (admin)
58. [MAJOR] BUTTON_FUNCTIONALITY - Button 0 on admin-analytics has no onclick handler (admin-analytics)
59. [MINOR] ACCESSIBILITY - Button 0 on admin-analytics missing accessible label (admin-analytics)
60. [MAJOR] BUTTON_FUNCTIONALITY - Button 1 on admin-analytics has no onclick handler (admin-analytics)
61. [MINOR] ACCESSIBILITY - Button 1 on admin-analytics missing accessible label (admin-analytics)
62. [MAJOR] BUTTON_FUNCTIONALITY - Button 2 on admin-analytics has no onclick handler (admin-analytics)
63. [MINOR] ACCESSIBILITY - Button 2 on admin-analytics missing accessible label (admin-analytics)
64. [MAJOR] BUTTON_FUNCTIONALITY - Button 3 on admin-analytics has no onclick handler (admin-analytics)
65. [MINOR] ACCESSIBILITY - Button 3 on admin-analytics missing accessible label (admin-analytics)
66. [MAJOR] BUTTON_FUNCTIONALITY - Button 4 on admin-analytics has no onclick handler (admin-analytics)
67. [MINOR] ACCESSIBILITY - Button 4 on admin-analytics missing accessible label (admin-analytics)
68. [MAJOR] API_ERROR - Line 26 in api.js: Fetch call without error handling - const response = await fetch(url, config); (api.js)
69. [MINOR] CODE_QUALITY - Line 27 in auth.js: Console.log in production code - console.log('Auth Manager - Restored from localStorage:', this.currentUser.username); (auth.js)
70. [MINOR] CODE_QUALITY - Line 30 in auth.js: Console.log in production code - console.log('Auth Manager - Failed to restore from localStorage:', error); (auth.js)
71. [MINOR] CODE_QUALITY - Line 39 in auth.js: Console.log in production code - console.log('Auth Manager - Checking authentication status...'); (auth.js)
72. [MINOR] CODE_QUALITY - Line 43 in auth.js: Console.log in production code - console.log('Auth Manager - User authenticated:', this.currentUser.username); (auth.js)
73. [MINOR] CODE_QUALITY - Line 53 in auth.js: Console.log in production code - console.log('Auth Manager - Not authenticated:', error.message || 'Unknown error'); (auth.js)
74. [MAJOR] JAVASCRIPT_ERROR - Line 257 in auth.js: getElementById without null check - const confirmPasswordInput = document.getElementById('confirmPassword'); (auth.js)
75. [MINOR] CODE_QUALITY - Line 317 in auth.js: Console.log in production code - console.log('Auth Manager - Notifying store manager about auth status change'); (auth.js)
76. [MINOR] CODE_QUALITY - Line 14 in cart.js: Console.log in production code - console.log('Cart Manager - Rechecking authentication...'); (cart.js)
77. [MINOR] CODE_QUALITY - Line 18 in cart.js: Console.log in production code - console.log('Cart Manager - Auth check:', { (cart.js)
78. [MINOR] CODE_QUALITY - Line 26 in cart.js: Console.log in production code - console.log('Cart Manager - Not authenticated, showing login message'); (cart.js)
79. [MINOR] CODE_QUALITY - Line 31 in cart.js: Console.log in production code - console.log('Cart Manager - User authenticated, loading cart'); (cart.js)
80. [MINOR] CODE_QUALITY - Line 46 in cart.js: Console.log in production code - console.log('Cart Manager - Auth manager ready, attempts:', attempts); (cart.js)
81. [MAJOR] JAVASCRIPT_ERROR - Line 82 in cart.js: getElementById without null check - const cartItemsContainer = document.getElementById('cartItems'); (cart.js)
82. [MAJOR] JAVASCRIPT_ERROR - Line 208 in cart.js: getElementById without null check - const subtotalEl = document.getElementById('subtotal'); (cart.js)
83. [MAJOR] JAVASCRIPT_ERROR - Line 209 in cart.js: getElementById without null check - const taxEl = document.getElementById('tax'); (cart.js)
84. [MAJOR] JAVASCRIPT_ERROR - Line 210 in cart.js: getElementById without null check - const shippingEl = document.getElementById('shipping'); (cart.js)
85. [MAJOR] JAVASCRIPT_ERROR - Line 211 in cart.js: getElementById without null check - const totalEl = document.getElementById('total'); (cart.js)
86. [MINOR] CODE_QUALITY - Line 412 in cart.js: Console.log in production code - console.log('Cart Manager - Initializing...'); (cart.js)
87. [MINOR] CODE_QUALITY - Line 31 in store.js: Console.log in production code - console.log('Store Manager - Auth manager ready, attempts:', attempts); (store.js)
88. [MAJOR] JAVASCRIPT_ERROR - Line 64 in store.js: getElementById without null check - const searchInput = document.getElementById('searchInput'); (store.js)
89. [MAJOR] JAVASCRIPT_ERROR - Line 123 in store.js: getElementById without null check - const productsGrid = document.getElementById('productsGrid'); (store.js)
90. [MINOR] CODE_QUALITY - Line 387 in store.js: Console.log in production code - console.log('Store Manager - Re-rendering products for auth status change'); (store.js)
91. [MINOR] CODE_QUALITY - Line 394 in store.js: Console.log in production code - console.log('Store Manager - Refreshing auth status'); (store.js)
92. [MAJOR] JAVASCRIPT_ERROR - Line 400 in store.js: getElementById without null check - const productsGrid = document.getElementById('productsGrid'); (store.js)
93. [MINOR] CODE_QUALITY - Line 413 in store.js: Console.log in production code - console.log('Store Manager - Initializing...'); (store.js)
94. [MINOR] CODE_QUALITY - Line 17 in orders.js: Console.log in production code - console.log('Orders Manager - Not authenticated, showing login message'); (orders.js)
95. [MINOR] CODE_QUALITY - Line 22 in orders.js: Console.log in production code - console.log('Orders Manager - User authenticated, loading orders'); (orders.js)
96. [MAJOR] JAVASCRIPT_ERROR - Line 69 in orders.js: getElementById without null check - const ordersListContainer = document.getElementById('ordersList'); (orders.js)
97. [MAJOR] JAVASCRIPT_ERROR - Line 184 in orders.js: getElementById without null check - const orderDetailsContainer = document.getElementById('orderDetailsContent'); (orders.js)
98. [MAJOR] JAVASCRIPT_ERROR - Line 290 in orders.js: getElementById without null check - const modalCloseBtn = document.getElementById('modalCloseBtn'); (orders.js)
99. [MAJOR] JAVASCRIPT_ERROR - Line 291 in orders.js: getElementById without null check - const modalCloseFooterBtn = document.getElementById('modalCloseFooterBtn'); (orders.js)
100. [MAJOR] JAVASCRIPT_ERROR - Line 325 in orders.js: getElementById without null check - const loginRequiredEl = document.getElementById('loginRequired'); (orders.js)
101. [MAJOR] JAVASCRIPT_ERROR - Line 61 in reviews.js: getElementById without null check - document.getElementById('rating').value = this.userRating; (reviews.js)
102. [MAJOR] JAVASCRIPT_ERROR - Line 90 in reviews.js: getElementById without null check - document.getElementById('product-title').textContent = `${product.title} - Reviews`; (reviews.js)
103. [MAJOR] JAVASCRIPT_ERROR - Line 91 in reviews.js: getElementById without null check - document.getElementById('product-description').textContent = product.description; (reviews.js)
104. [MAJOR] JAVASCRIPT_ERROR - Line 92 in reviews.js: getElementById without null check - document.getElementById('product-image').src = product.image || '/images/products/placeholder.jpg'; (reviews.js)
105. [MAJOR] JAVASCRIPT_ERROR - Line 93 in reviews.js: getElementById without null check - document.getElementById('product-header').style.display = 'flex'; (reviews.js)
106. [MAJOR] JAVASCRIPT_ERROR - Line 126 in reviews.js: getElementById without null check - document.getElementById('reviews-title').textContent = 'All Product Reviews'; (reviews.js)
107. [MAJOR] JAVASCRIPT_ERROR - Line 170 in reviews.js: getElementById without null check - const reviewsList = document.getElementById('reviews-list'); (reviews.js)
108. [MAJOR] JAVASCRIPT_ERROR - Line 171 in reviews.js: getElementById without null check - const noReviews = document.getElementById('no-reviews'); (reviews.js)
109. [MAJOR] JAVASCRIPT_ERROR - Line 185 in reviews.js: getElementById without null check - document.getElementById('average-rating').textContent = data.averageRating.toFixed(1); (reviews.js)
110. [MAJOR] JAVASCRIPT_ERROR - Line 188 in reviews.js: getElementById without null check - document.getElementById('average-rating').textContent = '0.0'; (reviews.js)
111. [MAJOR] JAVASCRIPT_ERROR - Line 189 in reviews.js: getElementById without null check - document.getElementById('review-stats').textContent = '(No reviews yet)'; (reviews.js)
112. [MAJOR] JAVASCRIPT_ERROR - Line 194 in reviews.js: getElementById without null check - const reviewsList = document.getElementById('reviews-list'); (reviews.js)
113. [MAJOR] JAVASCRIPT_ERROR - Line 195 in reviews.js: getElementById without null check - const noReviews = document.getElementById('no-reviews'); (reviews.js)
114. [MAJOR] JAVASCRIPT_ERROR - Line 337 in reviews.js: getElementById without null check - const formData = new FormData(document.getElementById('review-form')); (reviews.js)
115. [MAJOR] JAVASCRIPT_ERROR - Line 367 in reviews.js: getElementById without null check - document.getElementById('review-form').reset(); (reviews.js)
116. [MAJOR] JAVASCRIPT_ERROR - Line 434 in reviews.js: getElementById without null check - const formContainer = document.getElementById('review-form-container'); (reviews.js)
117. [MAJOR] JAVASCRIPT_ERROR - Line 435 in reviews.js: getElementById without null check - const loginPrompt = document.getElementById('login-prompt'); (reviews.js)
118. [MAJOR] JAVASCRIPT_ERROR - Line 454 in reviews.js: getElementById without null check - const errorElement = document.getElementById('error-message'); (reviews.js)
119. [MAJOR] JAVASCRIPT_ERROR - Line 40 in wishlist.js: getElementById without null check - document.getElementById('select-all-btn').addEventListener('click', () => { (wishlist.js)
120. [MAJOR] JAVASCRIPT_ERROR - Line 45 in wishlist.js: getElementById without null check - document.getElementById('clear-wishlist-btn').addEventListener('click', () => { (wishlist.js)
121. [MAJOR] JAVASCRIPT_ERROR - Line 50 in wishlist.js: getElementById without null check - document.getElementById('add-selected-to-cart').addEventListener('click', () => { (wishlist.js)
122. [MAJOR] JAVASCRIPT_ERROR - Line 54 in wishlist.js: getElementById without null check - document.getElementById('remove-selected').addEventListener('click', () => { (wishlist.js)
123. [MAJOR] JAVASCRIPT_ERROR - Line 58 in wishlist.js: getElementById without null check - document.getElementById('clear-selection').addEventListener('click', () => { (wishlist.js)
124. [MAJOR] JAVASCRIPT_ERROR - Line 89 in wishlist.js: getElementById without null check - const itemsContainer = document.getElementById('wishlist-items'); (wishlist.js)
125. [MAJOR] JAVASCRIPT_ERROR - Line 90 in wishlist.js: getElementById without null check - const emptyWishlist = document.getElementById('empty-wishlist'); (wishlist.js)
126. [MAJOR] JAVASCRIPT_ERROR - Line 301 in wishlist.js: getElementById without null check - const selectAllBtn = document.getElementById('select-all-btn'); (wishlist.js)
127. [MAJOR] JAVASCRIPT_ERROR - Line 359 in wishlist.js: getElementById without null check - document.getElementById('select-all-btn').textContent = 'Select All'; (wishlist.js)
128. [MAJOR] JAVASCRIPT_ERROR - Line 394 in wishlist.js: getElementById without null check - document.getElementById('total-items').textContent = totalItems; (wishlist.js)
129. [MAJOR] JAVASCRIPT_ERROR - Line 395 in wishlist.js: getElementById without null check - document.getElementById('total-value').textContent = `$${totalValue.toFixed(2)}`; (wishlist.js)
130. [MAJOR] JAVASCRIPT_ERROR - Line 399 in wishlist.js: getElementById without null check - const bulkActions = document.getElementById('bulk-actions'); (wishlist.js)
131. [MAJOR] JAVASCRIPT_ERROR - Line 400 in wishlist.js: getElementById without null check - const selectedCount = document.getElementById('selected-count'); (wishlist.js)
132. [MAJOR] JAVASCRIPT_ERROR - Line 401 in wishlist.js: getElementById without null check - const selectAllBtn = document.getElementById('select-all-btn'); (wishlist.js)
133. [MAJOR] JAVASCRIPT_ERROR - Line 437 in wishlist.js: getElementById without null check - document.getElementById('login-prompt').style.display = 'block'; (wishlist.js)
134. [MAJOR] JAVASCRIPT_ERROR - Line 438 in wishlist.js: getElementById without null check - document.getElementById('wishlist-content').style.display = 'none'; (wishlist.js)
135. [MAJOR] JAVASCRIPT_ERROR - Line 442 in wishlist.js: getElementById without null check - document.getElementById('login-prompt').style.display = 'none'; (wishlist.js)
136. [MAJOR] JAVASCRIPT_ERROR - Line 443 in wishlist.js: getElementById without null check - document.getElementById('wishlist-content').style.display = 'block'; (wishlist.js)
137. [MAJOR] JAVASCRIPT_ERROR - Line 451 in wishlist.js: getElementById without null check - const errorElement = document.getElementById('error-message'); (wishlist.js)
138. [MAJOR] JAVASCRIPT_ERROR - Line 186 in theme.js: getElementById without null check - if (document.getElementById('theme-controls')) { (theme.js)
139. [MAJOR] JAVASCRIPT_ERROR - Line 443 in theme.js: getElementById without null check - const navbarToggleBtn = document.getElementById('theme-toggle'); (theme.js)
140. [MAJOR] JAVASCRIPT_ERROR - Line 444 in theme.js: getElementById without null check - const selfToggleBtn = document.getElementById('theme-toggle-btn'); (theme.js)
141. [MAJOR] JAVASCRIPT_ERROR - Line 445 in theme.js: getElementById without null check - const panel = document.getElementById('theme-panel'); (theme.js)
142. [MAJOR] JAVASCRIPT_ERROR - Line 637 in theme.js: getElementById without null check - const autoSwitchCheckbox = document.getElementById('auto-switch-checkbox'); (theme.js)
143. [MINOR] CODE_QUALITY - Line 18 in checkout.js: Console.log in production code - console.log('Checkout Manager - Not authenticated, showing login message'); (checkout.js)
144. [MINOR] CODE_QUALITY - Line 23 in checkout.js: Console.log in production code - console.log('Checkout Manager - User authenticated, loading checkout'); (checkout.js)
145. [MAJOR] JAVASCRIPT_ERROR - Line 77 in checkout.js: getElementById without null check - const orderItemsContainer = document.getElementById('orderItems'); (checkout.js)
146. [MAJOR] JAVASCRIPT_ERROR - Line 125 in checkout.js: getElementById without null check - const subtotalEl = document.getElementById('orderSubtotal'); (checkout.js)
147. [MAJOR] JAVASCRIPT_ERROR - Line 126 in checkout.js: getElementById without null check - const taxEl = document.getElementById('orderTax'); (checkout.js)
148. [MAJOR] JAVASCRIPT_ERROR - Line 127 in checkout.js: getElementById without null check - const shippingEl = document.getElementById('orderShipping'); (checkout.js)
149. [MAJOR] JAVASCRIPT_ERROR - Line 128 in checkout.js: getElementById without null check - const totalEl = document.getElementById('orderTotal'); (checkout.js)
150. [MAJOR] JAVASCRIPT_ERROR - Line 222 in checkout.js: getElementById without null check - const loginRequiredEl = document.getElementById('loginRequired'); (checkout.js)
151. [MINOR] CODE_QUALITY - Line 18 in payment.js: Console.log in production code - console.log('Payment Manager - Not authenticated, showing login message'); (payment.js)
152. [MINOR] CODE_QUALITY - Line 27 in payment.js: Console.log in production code - console.log('Payment Manager - No order ID found'); (payment.js)
153. [MINOR] CODE_QUALITY - Line 32 in payment.js: Console.log in production code - console.log('Payment Manager - User authenticated, loading order:', this.orderId); (payment.js)
154. [MAJOR] JAVASCRIPT_ERROR - Line 80 in payment.js: getElementById without null check - const orderSummaryContainer = document.getElementById('orderSummary'); (payment.js)
155. [MAJOR] JAVASCRIPT_ERROR - Line 163 in payment.js: getElementById without null check - const cardNumberInput = document.getElementById('cardNumber'); (payment.js)
156. [MAJOR] JAVASCRIPT_ERROR - Line 164 in payment.js: getElementById without null check - const expiryDateInput = document.getElementById('expiryDate'); (payment.js)
157. [MAJOR] JAVASCRIPT_ERROR - Line 165 in payment.js: getElementById without null check - const cvvInput = document.getElementById('cvv'); (payment.js)
158. [MAJOR] JAVASCRIPT_ERROR - Line 241 in payment.js: getElementById without null check - const payBtn = document.getElementById('payBtn'); (payment.js)
159. [MAJOR] JAVASCRIPT_ERROR - Line 266 in payment.js: getElementById without null check - const payBtn = document.getElementById('payBtn'); (payment.js)
160. [MAJOR] JAVASCRIPT_ERROR - Line 288 in payment.js: getElementById without null check - const loginRequiredEl = document.getElementById('loginRequired'); (payment.js)
161. [MAJOR] JAVASCRIPT_ERROR - Line 301 in payment.js: getElementById without null check - const noOrderEl = document.getElementById('noOrder'); (payment.js)
162. [MINOR] CODE_QUALITY - Line 16 in thank-you.js: Console.log in production code - console.log('Thank You Manager - No order data found'); (thank-you.js)
163. [MINOR] CODE_QUALITY - Line 23 in thank-you.js: Console.log in production code - console.log('Thank You Manager - Order loaded:', this.order.id); (thank-you.js)
164. [MAJOR] JAVASCRIPT_ERROR - Line 54 in thank-you.js: getElementById without null check - const orderConfirmationContainer = document.getElementById('orderConfirmation'); (thank-you.js)
165. [MAJOR] JAVASCRIPT_ERROR - Line 156 in thank-you.js: getElementById without null check - const noOrderEl = document.getElementById('noOrder'); (thank-you.js)
166. [CRITICAL] API_ERROR - POST /api/auth/register returns 400 (api)
167. [CRITICAL] API_ERROR - POST /api/auth/login returns 400 (api)
168. [CRITICAL] API_ERROR - GET /api/orders/user-1 returns 401 (api)
169. [MAJOR] API_ERROR - GET /api/wishlist/user-1 returns 401 (api)
170. [MAJOR] API_ERROR - GET /api/loyalty/points/user-1 returns 401 (api)
171. [MAJOR] API_ERROR - GET /api/admin/stats returns 401 (api)
172. [MAJOR] API_ERROR - GET /api/analytics/sales returns 401 (api)
173. [MINOR] ACCESSIBILITY - Page /index.html images missing alt attributes (/index.html)
174. [MINOR] ACCESSIBILITY - Page /pages/store.html images missing alt attributes (/pages/store.html)
175. [MAJOR] ACCESSIBILITY - Page /pages/store.html has inputs without labels (/pages/store.html)
176. [MINOR] ACCESSIBILITY - Page /pages/store.html interactive elements may not support keyboard navigation (/pages/store.html)
177. [MINOR] ACCESSIBILITY - Page /pages/login.html images missing alt attributes (/pages/login.html)
178. [MINOR] ACCESSIBILITY - Page /pages/cart.html images missing alt attributes (/pages/cart.html)
179. [MINOR] ACCESSIBILITY - Page /pages/checkout.html images missing alt attributes (/pages/checkout.html)